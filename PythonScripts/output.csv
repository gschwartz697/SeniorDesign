"If we just state in a solution, that run a variant of Quick Select where the comparison is done between absolute values and not the actual values, do we need to explain anything more?

(Making this private because this might give away a part of the solution, please let me know if this should be public).","Just to clarify, for all the questions that require us to write an algorithm, we need to go through the three steps of describing, proving correctness and then analysis of runtime? So we cannot base our answer on the structure provided in the recitation guide because there isn't a proof for correctness?","Hello,

Do we have to prove that dividing a binary number by two decreases the # of bits by 1? If we do, is it rigorous enough to say that this is analogous to dividing by 10 in the decimal system (which we know decreases the number of digits by 1 for any number)? Thanks in advance."
Hey team. So I was thinking about number one. Do we need to prove its correctness or just run time.,"Hey so I was focused on the midterm and was going to just do the regrade request for HW4 tonight because I thought there was office hours but it turns out there's not. Since there's not any between now and the regrade request deadline, how can I get a regrade request?"
I saw on gradescope that hw4 is due next Monday. When will the write-up be out? Thank you,"When we say jealous of first person with a bigger bouquet in front of them, does in front mean relative tot eh front of the line or ahead of them. For instance consider a Ta with bouquet of size 5 in this line

Front [ 1, 7, 4, 6, 5] Back

Would she be jealous of 6, the first person in front of her with a bigger bouquet, or of 7 the earliest biggest bouquet

Thanks!"
"Just to make sure, our algorithm has to determine whether *strictly* more than half of the entries in the input array are the same, right? So let's say you have the array: a,a,a,a,b,b,b,b then the algorithm would say that Ben has lost, right?","For a D&amp;C algorithm on an array, say were selecting a pointer of an element nearest the center element and cutting the off part of the array to a side of the pointer in each step. so for an array of size 8: {1,2,3,4,5,6,7,8}, we could potentially have a pointer on element 5, and in the division step, we could shave off the elements strictly to the right of 5 and recurse on whats left: {1,2,3,4,5}, repeating, wed select the pointer to be the closed the the middle, which is 3, and would cut off one of the sides of three to yield an array with two elements. Im having trouble with the runtime of something like this, since were not completely cutting the array in half every time. Its more of a problem when the array size is even, since we'd only be cutting off $$\frac{n}{2} - 1$$ elements so our recursion, in the worst case would be $$T(n) = T(\frac{n}{2} + 1) + O(1)$$ if were performing constant time operations at every step, which i believe will come out to a upper bound linear run time even though were nearly halving the array every time.. How can I stengthen this? maybe by taking into account that after having a worst case cut of an even size array, we'd be left with an odd-size array that would always cut $$\lfloor \frac{n}{2} \rfloor$$ and thus a better recursion, but I'm not sure how to deal with the changing change of the argument in the expansion of that runtime. Can we just say that the +1 round off in halving isn't effectual for large numbers?"
"im having trouble understanding where the base case is for quickselect..
what if i wanted the smallest element? like element 0? then how would partition be called such that it returns the value at index 0? because what would left be and right be? thanks!",Can we state that SELECT (discussed in CLRS) returns the $$k^\text{th}$$ smallest element in $$O(n)$$ time without proof?
Can we state that SELECT (discussed in CLRS) returns the $$k^\text{th}$$ smallest element in $$O(n)$$ time without proof?,"For this question, is our algorithm expected to always return the same position consistently. Or, can the algorithm output either position?","If I remember correctly, the SELECT algorithm that we learned doesn't compute the exact value; only an approximation. Can our answer for Q3 be an approximation algorithm like this? Or does it need to be exact?","When the questions ask for a ____ time algorithm, for example in Q3. ""Describe a linear time algorithm (with respect to c) that Weiwei could have came up with"", does this mean an O(n) algorithm or $$\Theta(n)$$ algorithm? ","Hello, on the hw solutions for q3, the description of the algorithm says to choose the s'th smallest element in Diff, then outputs all costumes corresponding to those numbers in C that are less than t. Isn't that mixing up a difference with an actual price?

Also, in the next step, it says to add s-x costumes corresponding to the sth smallest element in x. Can someone explain this as well?

Thanks.",Is running quick select c times where c= n a O(n^2) algorithm?,"For example, quickselect has an expected linear runtime but worstcase of n^2.

Can we do something like that for Q3 or do we have to come up with worst case linear"
"Do we have to prove the correctness for commonly known algorithms such as mergesort, quicksort, quickselect, etc? ",I forgot to submit my assignment on Canvas. I just submitted the same version I submitted for Gradescope on Canvas. Will this count as a late day?,Can the integers be negative?,"can the ta's communicate with the ones in front of them to find out, for instance, who the person directly in front of them is jealous of? ","Hi, 
I know that TA's are allowed to communicate with each other, but what is the run time for communication? For example, if the person in the back of the line wanted to communicate with the person in the front of the line, would the runtime of this action be O(n)? ",In talking to each other can TA's ask other TA's who they're jealous of?,Will the first TA be jealous of herself? ,"Can Ben select specific candies? Say we index the candies 1 to n. Can Ben choose candies 1 and 3, for example, or must he choose two at random?","Does the question mean that Ben wins if for a message ""j"", there are more than n/2 candies with message ""j"" written on them? Or does it mean that for any two candies ""a"" and ""b"", if they have the same message then that is 1 towards our n/2 + 1 threshold?",Let's say Ben checks m/2 candies and there is a message that's on more than m/4 candies. Can Ben know the message that's on those m/4 candies?,"If Ben knows that a subset of his candy contains a majority with the same message, can he store and remember the amount of candies in this subset that have the same message? 

For example, if the candy is stored in an array of length 20, and Ben searches the first 10 candys in such a way that he finds 6 with the same message, can Ben remember that this majority contained 6 with that message?",Is Ben able to count the amount of messages? or split the pile of messages with with given numbers?,"Once Ben eats the candy, does he have no memory of it. I.e. can he take a picture of an array of the candy and save that for later?","If I came up with an algorithm that stores all the candies such that all the candies with the same message are together:
eg. Let each number corresponds to a message

[1, 1, 1, 2, 2, 3, 3, 3, 3, 4]

Can I go through the array again and check for the longest group with the same message? (in this case message 3 with a length of 4) ","From now on, can we use the Simplified Master Theorem to analyze runtime?",Do we have to prove the correctness of our algorithm for 2a or just the runtime? ,"Do we have to prove gcd(a,1) = 1 in question 1 on the homework?","The solution for Q1A3 says ""From Euclid's algorithm, we also know that $$gcd(x,y) = gcd(|x-y|, y)$$.""
How do we know this? I'm confused because I thought Euclid's algorithm uses the fact that $$gcd(x,y) = gcd(x, x mod y)$$, not $$|x-y|$$?","Do we need to prove that gcd(a,b) = c, gcd(a/c, b/c) = 1, or we can just regard it as a definition?","When taking the gcd(5,25) I am not seeing how we don't fall into a loop - we take gcd((5-25)/2, 25) = gcd(10,25) = gcd(5,25) {from previous proof} 

Am I doing it wrong? ","Do we need to prove that gcd(a,b) = c, gcd(a/c, b/c) = 1, or we can just regard it as a definition?",can we assume that the messages are labelled as numbers? ,can we assume that the 2 inputs are always positive?
"I want to argue that my algorithm takes in 2 inputs of $$n$$ bits each, and it recurses on (at worst) an input of $$n$$ bit and another input of $$n-1$$ bit. Thus, the recurrence is $$T(2n) = T(2n-1) + n$$ which is $$O(n^2)$$. However, I know that algorithm should always takes in two inputs with equal bits, does that mean the recurrence relation $$T(2n) = T(2n-1) + n$$ doesn't really hold?","so if we know that the mincut is the set of edges of cardinality k where k is the minimum degree of the vertices, why cant we just do an algorithm that finds the vertex with min degree and returns the edges of that vertex (instead of all this randomized stuff)? Wouldn't this also guarantee that its correct? 
Is the issue that now its not O(n) but rather maybe O(n+m)?"
Can we use the fact that every number has a unique prime factorization in our proof?,Is it correct to define the GCD of two numbers x and y as the product of all the common prime factors of x and y?,Can I conclude from $$x=ab$$ and $$y=ac$$ and $$b$$ and $$c$$ are coprime that $$a$$ is the greatest common divisor of $$x$$ and $$y$$,Can I conclude from $$x=ab$$ and $$y=ac$$ and $$b$$ and $$c$$ are coprime that $$a$$ is the greatest common divisor of $$x$$ and $$y$$
"Can we just prove the worst case for our runtime in 1B, since that's what was done for the Euclid Algorithm?","if were asked for a particular runtime, for example O(k), where k is a subset of some input n, then if we have runtime O( klog(n)) for example does this still count as O(k) since the variable in question here is k? ",Can we directly use the algorithm and runtime from rajiv's lecture by simply referring to it? Do we have to describe the algorithm again?
what is the runtime for multiplication/division of bits? thanks!,"For question three, if my list was [1, 2, 3, 100, 101], would calling the algorithm with s=3 return [1,2,3] or [2,3,100]? Basically, does ""closest"" mean proximity to the median in the sorted list, or difference in value?","For question 3, what does it mean to select the numbers closest to the median? Does it mean minimal difference?

For instance, there are 7 numbers: 1, 1, 1, 50, 51, 100, 100, does that mean if $$s=2$$ then the algorithm must choose 50 and 51, not 1 and 50?"
Can we just say Partition in our algorithm or do we need to describe it again? Thanks,do we assume there are an even number of candies to begin with? thanks
"i am wondering if the run time increases with the magnitude of the prices. i.e. if the maximum price is 1000 is it okay if our run time is 2n + 1000
made this private because this is my answer :)","If we can get the prices of the costumes that should be selected (i.e. 10 and 12 in the example in the question), do we also need to figure out how to get back their indices (i.e. c1 and c2) in linear time?","In question 3 are the prices of the costumes distinct or can costumes have the same price?

Thanks!"
"Hi, I have an algorithm for 3 and there is one edge case that I have no idea how to handle. Basically, my algorithm is as such:
1)find the median
2) create new array with differences between median and original array
3) Find sth smallest element of new array. This is the cutoff, and everything equal to it or smaller than it should be included
4) iterate through new array and return indices of every element smaller than the cutoff until I get s elements
However, a case arises with repeats that is very unique and I am not sure if I am meant to know how to handle it. Should I account for this case:
s=3, array ={1,1,2,2,4}, median = 2
The three closest elements to the median should be one of the ones and both of the twos. However, the difference array becomes {1,1,0,0,2} and the 3rd smallest element becomes 1, which becomes the cutoff. If I iterate through this array from front to end in the 4th step, I will pickup both of ones, where I only want one. Should I figure out a way to beat this case or is this a case you guys have not considered? Thanks.","Hi Dr. Gandhi and TAs, 

I know you all have a strict deadline on submitting homeworks on canvas, but my turn-it-in browser crashed while I tried to turn in my homework. I thought it had worked and went to a different tab. I just check it now and saw that the submission failed. Is there any way I could get my submission in without a penalty? I can show timestamps that I haven't opened the document since prior to midnight. Let me know!

Thanks!
Petra","lost.PNG
Hi! I was just hoping that I could request some points for this question. I know I accidentally forgot the $$ around the inequality which made it a ""?"", but does this mean that I lose all the points? I can see that I got the other criteria correct otherwise and was hoping to only lose points for the criteria that involves the inequality. I'm sorry for not double checking the formatting before submitting! ","lost.PNG
Hi! I was just hoping that I could request some points for this question. I know I accidentally forgot the $$ around the inequality which made it a ""?"", but does this mean that I lose all the points? I can see that I got the other criteria correct otherwise and was hoping to only lose points for the criteria that involves the inequality. I'm sorry for not double checking the formatting before submitting! "
"We don't need to use definitions of bounds e.g. using limits or finding constants to prove bounds for this homework right? For example I can just state $$O(2n) = O(n)$$ ? 

Sorry if this has been asked already but I couldn't find it and just wanna make sure. ",Do we need to prove $$\Theta$$ bounds as rigorously as we did for the previous homework? For example if T(n) is something like $$T(n) = c_1n + c_2$$ can we just state that its $$\Theta(n)$$?
My Canvas homework was submitting at 11:59 and then timed out and told me the submission hadn't gone through. I know last minute submissions aren't the best idea but I was hoping there'd be some way to reopen it. Thanks. ,"So, I didn't manage to submit on canvas before 11:59, but submitted on Gradescope.

What should I do? Thanks"
"In question 3, should we assume that subtracting two elements takes constant time or O(n) time (like we did in question 1)?","For question 1, it says that it can be assumed that both x and y have n bits. This makes it convenient to express T as a function of n. However, after a recursive call, the inputs may not have the same number of bits, making the task difficult. How can this be resolved? Should we be using runtime functions that are functions of the combined number of bits?","Yeah this question is very subjective, but still, what is a general guideline? Is this supposed easy enough that it could be an exam question? I remember it being said in lecture that this was supposed to be an easy homework so we have time to study, but it personally took me a long long long long looong time for each and every question besides the first one, and I'm not even sure of being completely correct (Taking aside the fact that my proofs of correctness sound quite handwavey), so if this is exam-level then oh welp

If this is NOT something that could be on the exam, what's an example of something that we could have to come up with on the exam?","Yeah this question is very subjective, but still, what is a general guideline? Is this supposed easy enough that it could be an exam question? I remember it being said in lecture that this was supposed to be an easy homework so we have time to study, but it personally took me a long long long long looong time for each and every question besides the first one, and I'm not even sure of being completely correct (Taking aside the fact that my proofs of correctness sound quite handwavey), so if this is exam-level then oh welp

If this is NOT something that could be on the exam, what's an example of something that we could have to come up with on the exam?"
"If we should not assume that $$n$$ is a power of 2, are we not allowed then to use a recurrence of the form $$T(n) = T(\frac{n}{2})$$ for a divide and conquer algorithm? I.e., would we have to use a recurrence like $$T(n) = T(\lceil\frac{n}{2}\rceil)$$ instead? Or is that slight change fine to make, given that we do it in lecture all the time?","I looked at the lecture notes and recitation notes associated with divide and conquer, but they all only provide a proof of runtime bound. We are expected to also provide a proof of correctness though, right? Is there a simple sample proof of correctness for D&amp;C algorithms specifically that we could take a look at?","In divide and conquer algorithms, the ""conquer"" step seems to always just be ""yea do the same thing recursively"". Is that always the case?","I may be missing something about the suggested approach but in a case such as the following, it seems to give an incorrect answer: 
(1, 1, 2, 3, 4, 5, 6, 7). If the message are paired arbitrarily as (1,1), (2,3), (4,5), (6,7), then after performing the suggested procedure, only a single candy of message 1 remains. This is the same result that would eventually be achieved if our input did have a majority of message 1 candies. I am missing something here? Does the suggestion require us to refine it to make this work?","Can we describe the divide and conquer algorithm something in the form of:
Divide: ... (How we divide the problem into subproblem)
Conquer: ... (How we conquer each subproblem)
Combine:... (How we make the results of subproblems and get the result of the problem
Base Case: (the bottom of recursion)

Is it good enough of describing algorithm?"
"Would a divide and conquer algorithm refer to the number of bits or the actual numbers represented by the bits? So if an algorithm finding the gcd of x, y with a recursive call x/2, y/2 count as dnc even though the number of bits goes from n to n-1?","Can we describe the divide and conquer algorithm something in the form of:
Divide: ... (How we divide the problem into subproblem)
Conquer: ... (How we conquer each subproblem)
Combine:... (How we make the results of subproblems and get the result of the problem
Base Case: (the bottom of recursion)

Is it good enough of describing algorithm?"
Are we allowed to push and pop elements onto and off of a stack in our answers to the HW questions? ,"Krishna,

I just realized that I did not submit hw 3 or hw 4 to canvas; however, I submitted it to gradescope. To demonstrate that I have not edited the files since I submitted them, I have attached screenshots of the ""date modified"" for both homeworks. Can I email them to you?

","For the hw solution, since pairing up takes O(n) time and comparing the 1st element with every other elements in the array in the odd case also takes n time, wouldn't for n&gt;=2 case, T(n) = T(n/2) + 2n?",I know today is the last day of endorsements but because of my workload in the week this is the only time I had to go over the HW and see my mistakes. Is there anyway I can get a regrade endorsement/or see a TA about it today? Thanks
